
MCU1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000854  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000008c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  000008c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000938  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010ad  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a54  00000000  00000000  00001b75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000183d  00000000  00000000  000025c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00003e08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006f1d  00000000  00000000  00004050  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000486  00000000  00000000  0000af6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000b3f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002a0a  00000000  00000000  0000b4e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	95 c0       	rjmp	.+298    	; 0x12c <__ctors_end>
   2:	00 00       	nop
   4:	a3 c0       	rjmp	.+326    	; 0x14c <__bad_interrupt>
   6:	00 00       	nop
   8:	a1 c0       	rjmp	.+322    	; 0x14c <__bad_interrupt>
   a:	00 00       	nop
   c:	9f c0       	rjmp	.+318    	; 0x14c <__bad_interrupt>
   e:	00 00       	nop
  10:	9d c0       	rjmp	.+314    	; 0x14c <__bad_interrupt>
  12:	00 00       	nop
  14:	9b c0       	rjmp	.+310    	; 0x14c <__bad_interrupt>
  16:	00 00       	nop
  18:	99 c0       	rjmp	.+306    	; 0x14c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	97 c0       	rjmp	.+302    	; 0x14c <__bad_interrupt>
  1e:	00 00       	nop
  20:	95 c0       	rjmp	.+298    	; 0x14c <__bad_interrupt>
  22:	00 00       	nop
  24:	6f c2       	rjmp	.+1246   	; 0x504 <__vector_9>
  26:	00 00       	nop
  28:	91 c0       	rjmp	.+290    	; 0x14c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8f c0       	rjmp	.+286    	; 0x14c <__bad_interrupt>
  2e:	00 00       	nop
  30:	8d c0       	rjmp	.+282    	; 0x14c <__bad_interrupt>
  32:	00 00       	nop
  34:	8b c0       	rjmp	.+278    	; 0x14c <__bad_interrupt>
  36:	00 00       	nop
  38:	89 c0       	rjmp	.+274    	; 0x14c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	87 c0       	rjmp	.+270    	; 0x14c <__bad_interrupt>
  3e:	00 00       	nop
  40:	85 c0       	rjmp	.+266    	; 0x14c <__bad_interrupt>
  42:	00 00       	nop
  44:	83 c0       	rjmp	.+262    	; 0x14c <__bad_interrupt>
  46:	00 00       	nop
  48:	81 c0       	rjmp	.+258    	; 0x14c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7f c0       	rjmp	.+254    	; 0x14c <__bad_interrupt>
  4e:	00 00       	nop
  50:	7d c0       	rjmp	.+250    	; 0x14c <__bad_interrupt>
  52:	00 00       	nop
  54:	dc 00       	.word	0x00dc	; ????
  56:	e7 00       	.word	0x00e7	; ????
  58:	f2 00       	.word	0x00f2	; ????
  5a:	fd 00       	.word	0x00fd	; ????
  5c:	08 01       	movw	r0, r16
  5e:	08 01       	movw	r0, r16
  60:	08 01       	movw	r0, r16
  62:	08 01       	movw	r0, r16
  64:	08 01       	movw	r0, r16
  66:	08 01       	movw	r0, r16
  68:	08 01       	movw	r0, r16
  6a:	08 01       	movw	r0, r16
  6c:	08 01       	movw	r0, r16
  6e:	08 01       	movw	r0, r16
  70:	08 01       	movw	r0, r16
  72:	08 01       	movw	r0, r16
  74:	08 01       	movw	r0, r16
  76:	08 01       	movw	r0, r16
  78:	08 01       	movw	r0, r16
  7a:	08 01       	movw	r0, r16
  7c:	08 01       	movw	r0, r16
  7e:	08 01       	movw	r0, r16
  80:	08 01       	movw	r0, r16
  82:	08 01       	movw	r0, r16
  84:	08 01       	movw	r0, r16
  86:	08 01       	movw	r0, r16
  88:	08 01       	movw	r0, r16
  8a:	08 01       	movw	r0, r16
  8c:	08 01       	movw	r0, r16
  8e:	08 01       	movw	r0, r16
  90:	08 01       	movw	r0, r16
  92:	08 01       	movw	r0, r16
  94:	dc 00       	.word	0x00dc	; ????
  96:	e7 00       	.word	0x00e7	; ????
  98:	f2 00       	.word	0x00f2	; ????
  9a:	fd 00       	.word	0x00fd	; ????
  9c:	14 01       	movw	r2, r8
  9e:	2d 01       	movw	r4, r26
  a0:	46 01       	movw	r8, r12
  a2:	5f 01       	movw	r10, r30
  a4:	77 01       	movw	r14, r14
  a6:	77 01       	movw	r14, r14
  a8:	77 01       	movw	r14, r14
  aa:	77 01       	movw	r14, r14
  ac:	77 01       	movw	r14, r14
  ae:	77 01       	movw	r14, r14
  b0:	77 01       	movw	r14, r14
  b2:	77 01       	movw	r14, r14
  b4:	77 01       	movw	r14, r14
  b6:	77 01       	movw	r14, r14
  b8:	77 01       	movw	r14, r14
  ba:	77 01       	movw	r14, r14
  bc:	77 01       	movw	r14, r14
  be:	77 01       	movw	r14, r14
  c0:	77 01       	movw	r14, r14
  c2:	77 01       	movw	r14, r14
  c4:	77 01       	movw	r14, r14
  c6:	77 01       	movw	r14, r14
  c8:	77 01       	movw	r14, r14
  ca:	77 01       	movw	r14, r14
  cc:	77 01       	movw	r14, r14
  ce:	77 01       	movw	r14, r14
  d0:	77 01       	movw	r14, r14
  d2:	77 01       	movw	r14, r14
  d4:	77 01       	movw	r14, r14
  d6:	77 01       	movw	r14, r14
  d8:	77 01       	movw	r14, r14
  da:	77 01       	movw	r14, r14
  dc:	14 01       	movw	r2, r8
  de:	2d 01       	movw	r4, r26
  e0:	46 01       	movw	r8, r12
  e2:	5f 01       	movw	r10, r30
  e4:	83 01       	movw	r16, r6
  e6:	9c 01       	movw	r18, r24
  e8:	b5 01       	movw	r22, r10
  ea:	ce 01       	movw	r24, r28
  ec:	e6 01       	movw	r28, r12
  ee:	e6 01       	movw	r28, r12
  f0:	e6 01       	movw	r28, r12
  f2:	e6 01       	movw	r28, r12
  f4:	e6 01       	movw	r28, r12
  f6:	e6 01       	movw	r28, r12
  f8:	e6 01       	movw	r28, r12
  fa:	e6 01       	movw	r28, r12
  fc:	e6 01       	movw	r28, r12
  fe:	e6 01       	movw	r28, r12
 100:	e6 01       	movw	r28, r12
 102:	e6 01       	movw	r28, r12
 104:	e6 01       	movw	r28, r12
 106:	e6 01       	movw	r28, r12
 108:	e6 01       	movw	r28, r12
 10a:	e6 01       	movw	r28, r12
 10c:	e6 01       	movw	r28, r12
 10e:	e6 01       	movw	r28, r12
 110:	e6 01       	movw	r28, r12
 112:	e6 01       	movw	r28, r12
 114:	e6 01       	movw	r28, r12
 116:	e6 01       	movw	r28, r12
 118:	e6 01       	movw	r28, r12
 11a:	e6 01       	movw	r28, r12
 11c:	e6 01       	movw	r28, r12
 11e:	e6 01       	movw	r28, r12
 120:	e6 01       	movw	r28, r12
 122:	e6 01       	movw	r28, r12
 124:	83 01       	movw	r16, r6
 126:	9c 01       	movw	r18, r24
 128:	b5 01       	movw	r22, r10
 12a:	ce 01       	movw	r24, r28

0000012c <__ctors_end>:
 12c:	11 24       	eor	r1, r1
 12e:	1f be       	out	0x3f, r1	; 63
 130:	cf e5       	ldi	r28, 0x5F	; 95
 132:	d8 e0       	ldi	r29, 0x08	; 8
 134:	de bf       	out	0x3e, r29	; 62
 136:	cd bf       	out	0x3d, r28	; 61

00000138 <__do_clear_bss>:
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	a0 e6       	ldi	r26, 0x60	; 96
 13c:	b0 e0       	ldi	r27, 0x00	; 0
 13e:	01 c0       	rjmp	.+2      	; 0x142 <.do_clear_bss_start>

00000140 <.do_clear_bss_loop>:
 140:	1d 92       	st	X+, r1

00000142 <.do_clear_bss_start>:
 142:	a3 36       	cpi	r26, 0x63	; 99
 144:	b2 07       	cpc	r27, r18
 146:	e1 f7       	brne	.-8      	; 0x140 <.do_clear_bss_loop>
 148:	81 d1       	rcall	.+770    	; 0x44c <main>
 14a:	82 c3       	rjmp	.+1796   	; 0x850 <_exit>

0000014c <__bad_interrupt>:
 14c:	59 cf       	rjmp	.-334    	; 0x0 <__vectors>

0000014e <motor_init>:
#include "HAL_DC_MOTOR.h"
#define OUTPUT 1
#define INPUT 0
void motor_init(){
	// Set PB3/OC0 & A0 & A1 as output (PWM output pin)
	DIO_vSetPinDirection('B',MOTOR_PWM_PIN,OUTPUT);
 14e:	41 e0       	ldi	r20, 0x01	; 1
 150:	63 e0       	ldi	r22, 0x03	; 3
 152:	82 e4       	ldi	r24, 0x42	; 66
 154:	5e d0       	rcall	.+188    	; 0x212 <DIO_vSetPinDirection>
	DIO_vSetPinDirection('C',MOTOR_PIN1,OUTPUT);
 156:	41 e0       	ldi	r20, 0x01	; 1
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	83 e4       	ldi	r24, 0x43	; 67
 15c:	5a d0       	rcall	.+180    	; 0x212 <DIO_vSetPinDirection>
	DIO_vSetPinDirection('C',MOTOR_PIN2,OUTPUT);
 15e:	41 e0       	ldi	r20, 0x01	; 1
 160:	61 e0       	ldi	r22, 0x01	; 1
 162:	83 e4       	ldi	r24, 0x43	; 67
 164:	56 d0       	rcall	.+172    	; 0x212 <DIO_vSetPinDirection>
	//clockwise direction
	DIO_vSetPinValue('C',MOTOR_PIN1,1);//set pin0
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	83 e4       	ldi	r24, 0x43	; 67
 16c:	c1 d0       	rcall	.+386    	; 0x2f0 <DIO_vSetPinValue>
	DIO_vSetPinValue('C',MOTOR_PIN2,0);//clear pin1
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	61 e0       	ldi	r22, 0x01	; 1
 172:	83 e4       	ldi	r24, 0x43	; 67
 174:	bd d0       	rcall	.+378    	; 0x2f0 <DIO_vSetPinValue>
 176:	8a e6       	ldi	r24, 0x6A	; 106
	// Set Fast PWM mode with non-inverted output
	TCCR0 = (1 << WGM00) | (1 << WGM01) | (1 << COM01) | (1 << CS01);
 178:	83 bf       	out	0x33, r24	; 51
 17a:	08 95       	ret

0000017c <motor_setspeed>:
 17c:	8c bf       	out	0x3c, r24	; 60
}
void motor_setspeed(u8 speed) {
	OCR0 = speed;  
 17e:	08 95       	ret

00000180 <Get_Tempreature>:
 180:	06 c0       	rjmp	.+12     	; 0x18e <ADC_read>
 182:	08 95       	ret

00000184 <ADC_init>:
 184:	80 e4       	ldi	r24, 0x40	; 64
 186:	87 b9       	out	0x07, r24	; 7
 188:	87 e8       	ldi	r24, 0x87	; 135
 18a:	86 b9       	out	0x06, r24	; 6
 18c:	08 95       	ret

0000018e <ADC_read>:
 18e:	97 b1       	in	r25, 0x07	; 7
 190:	98 7f       	andi	r25, 0xF8	; 248
 192:	87 70       	andi	r24, 0x07	; 7
 194:	89 2b       	or	r24, r25
 196:	87 b9       	out	0x07, r24	; 7
 198:	36 9a       	sbi	0x06, 6	; 6
 19a:	36 99       	sbic	0x06, 6	; 6
 19c:	fe cf       	rjmp	.-4      	; 0x19a <ADC_read+0xc>
 19e:	84 b1       	in	r24, 0x04	; 4
 1a0:	95 b1       	in	r25, 0x05	; 5
 1a2:	08 95       	ret

000001a4 <DIO_vGetPinValue>:
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	fc 01       	movw	r30, r24
 1a8:	e1 54       	subi	r30, 0x41	; 65
 1aa:	f1 09       	sbc	r31, r1
 1ac:	e4 32       	cpi	r30, 0x24	; 36
 1ae:	f1 05       	cpc	r31, r1
 1b0:	78 f5       	brcc	.+94     	; 0x210 <DIO_vGetPinValue+0x6c>
 1b2:	e6 5d       	subi	r30, 0xD6	; 214
 1b4:	ff 4f       	sbci	r31, 0xFF	; 255
 1b6:	39 c3       	rjmp	.+1650   	; 0x82a <__tablejump2__>
 1b8:	89 b3       	in	r24, 0x19	; 25
 1ba:	08 2e       	mov	r0, r24
 1bc:	00 0c       	add	r0, r0
 1be:	99 0b       	sbc	r25, r25
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_vGetPinValue+0x22>
 1c2:	95 95       	asr	r25
 1c4:	87 95       	ror	r24
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_vGetPinValue+0x1e>
 1ca:	81 70       	andi	r24, 0x01	; 1
 1cc:	08 95       	ret
 1ce:	86 b3       	in	r24, 0x16	; 22
 1d0:	08 2e       	mov	r0, r24
 1d2:	00 0c       	add	r0, r0
 1d4:	99 0b       	sbc	r25, r25
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_vGetPinValue+0x38>
 1d8:	95 95       	asr	r25
 1da:	87 95       	ror	r24
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_vGetPinValue+0x34>
 1e0:	81 70       	andi	r24, 0x01	; 1
 1e2:	08 95       	ret
 1e4:	83 b3       	in	r24, 0x13	; 19
 1e6:	08 2e       	mov	r0, r24
 1e8:	00 0c       	add	r0, r0
 1ea:	99 0b       	sbc	r25, r25
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_vGetPinValue+0x4e>
 1ee:	95 95       	asr	r25
 1f0:	87 95       	ror	r24
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_vGetPinValue+0x4a>
 1f6:	81 70       	andi	r24, 0x01	; 1
 1f8:	08 95       	ret
 1fa:	80 b3       	in	r24, 0x10	; 16
 1fc:	08 2e       	mov	r0, r24
 1fe:	00 0c       	add	r0, r0
 200:	99 0b       	sbc	r25, r25
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_vGetPinValue+0x64>
 204:	95 95       	asr	r25
 206:	87 95       	ror	r24
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_vGetPinValue+0x60>
 20c:	81 70       	andi	r24, 0x01	; 1
 20e:	08 95       	ret
 210:	08 95       	ret

00000212 <DIO_vSetPinDirection>:
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	fc 01       	movw	r30, r24
 216:	e1 54       	subi	r30, 0x41	; 65
 218:	f1 09       	sbc	r31, r1
 21a:	e4 32       	cpi	r30, 0x24	; 36
 21c:	f1 05       	cpc	r31, r1
 21e:	08 f0       	brcs	.+2      	; 0x222 <DIO_vSetPinDirection+0x10>
 220:	66 c0       	rjmp	.+204    	; 0x2ee <DIO_vSetPinDirection+0xdc>
 222:	e2 5b       	subi	r30, 0xB2	; 178
 224:	ff 4f       	sbci	r31, 0xFF	; 255
 226:	01 c3       	rjmp	.+1538   	; 0x82a <__tablejump2__>
 228:	44 23       	and	r20, r20
 22a:	59 f0       	breq	.+22     	; 0x242 <DIO_vSetPinDirection+0x30>
 22c:	2a b3       	in	r18, 0x1a	; 26
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_vSetPinDirection+0x26>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_vSetPinDirection+0x22>
 23c:	82 2b       	or	r24, r18
 23e:	8a bb       	out	0x1a, r24	; 26
 240:	08 95       	ret
 242:	2a b3       	in	r18, 0x1a	; 26
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_vSetPinDirection+0x3c>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_vSetPinDirection+0x38>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	8a bb       	out	0x1a, r24	; 26
 258:	08 95       	ret
 25a:	44 23       	and	r20, r20
 25c:	59 f0       	breq	.+22     	; 0x274 <DIO_vSetPinDirection+0x62>
 25e:	27 b3       	in	r18, 0x17	; 23
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_vSetPinDirection+0x58>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_vSetPinDirection+0x54>
 26e:	82 2b       	or	r24, r18
 270:	87 bb       	out	0x17, r24	; 23
 272:	08 95       	ret
 274:	27 b3       	in	r18, 0x17	; 23
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_vSetPinDirection+0x6e>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_vSetPinDirection+0x6a>
 284:	80 95       	com	r24
 286:	82 23       	and	r24, r18
 288:	87 bb       	out	0x17, r24	; 23
 28a:	08 95       	ret
 28c:	44 23       	and	r20, r20
 28e:	59 f0       	breq	.+22     	; 0x2a6 <DIO_vSetPinDirection+0x94>
 290:	24 b3       	in	r18, 0x14	; 20
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_vSetPinDirection+0x8a>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_vSetPinDirection+0x86>
 2a0:	82 2b       	or	r24, r18
 2a2:	84 bb       	out	0x14, r24	; 20
 2a4:	08 95       	ret
 2a6:	24 b3       	in	r18, 0x14	; 20
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_vSetPinDirection+0xa0>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_vSetPinDirection+0x9c>
 2b6:	80 95       	com	r24
 2b8:	82 23       	and	r24, r18
 2ba:	84 bb       	out	0x14, r24	; 20
 2bc:	08 95       	ret
 2be:	44 23       	and	r20, r20
 2c0:	59 f0       	breq	.+22     	; 0x2d8 <DIO_vSetPinDirection+0xc6>
 2c2:	21 b3       	in	r18, 0x11	; 17
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_vSetPinDirection+0xbc>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	6a 95       	dec	r22
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_vSetPinDirection+0xb8>
 2d2:	82 2b       	or	r24, r18
 2d4:	81 bb       	out	0x11, r24	; 17
 2d6:	08 95       	ret
 2d8:	21 b3       	in	r18, 0x11	; 17
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_vSetPinDirection+0xd2>
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_vSetPinDirection+0xce>
 2e8:	80 95       	com	r24
 2ea:	82 23       	and	r24, r18
 2ec:	81 bb       	out	0x11, r24	; 17
 2ee:	08 95       	ret

000002f0 <DIO_vSetPinValue>:
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	fc 01       	movw	r30, r24
 2f4:	e1 54       	subi	r30, 0x41	; 65
 2f6:	f1 09       	sbc	r31, r1
 2f8:	e4 32       	cpi	r30, 0x24	; 36
 2fa:	f1 05       	cpc	r31, r1
 2fc:	08 f0       	brcs	.+2      	; 0x300 <DIO_vSetPinValue+0x10>
 2fe:	66 c0       	rjmp	.+204    	; 0x3cc <DIO_vSetPinValue+0xdc>
 300:	ee 58       	subi	r30, 0x8E	; 142
 302:	ff 4f       	sbci	r31, 0xFF	; 255
 304:	92 c2       	rjmp	.+1316   	; 0x82a <__tablejump2__>
 306:	44 23       	and	r20, r20
 308:	59 f0       	breq	.+22     	; 0x320 <DIO_vSetPinValue+0x30>
 30a:	2b b3       	in	r18, 0x1b	; 27
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_vSetPinValue+0x26>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_vSetPinValue+0x22>
 31a:	82 2b       	or	r24, r18
 31c:	8b bb       	out	0x1b, r24	; 27
 31e:	08 95       	ret
 320:	2b b3       	in	r18, 0x1b	; 27
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	02 c0       	rjmp	.+4      	; 0x32c <DIO_vSetPinValue+0x3c>
 328:	88 0f       	add	r24, r24
 32a:	99 1f       	adc	r25, r25
 32c:	6a 95       	dec	r22
 32e:	e2 f7       	brpl	.-8      	; 0x328 <DIO_vSetPinValue+0x38>
 330:	80 95       	com	r24
 332:	82 23       	and	r24, r18
 334:	8b bb       	out	0x1b, r24	; 27
 336:	08 95       	ret
 338:	44 23       	and	r20, r20
 33a:	59 f0       	breq	.+22     	; 0x352 <DIO_vSetPinValue+0x62>
 33c:	28 b3       	in	r18, 0x18	; 24
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <DIO_vSetPinValue+0x58>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	6a 95       	dec	r22
 34a:	e2 f7       	brpl	.-8      	; 0x344 <DIO_vSetPinValue+0x54>
 34c:	82 2b       	or	r24, r18
 34e:	88 bb       	out	0x18, r24	; 24
 350:	08 95       	ret
 352:	28 b3       	in	r18, 0x18	; 24
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	02 c0       	rjmp	.+4      	; 0x35e <DIO_vSetPinValue+0x6e>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	6a 95       	dec	r22
 360:	e2 f7       	brpl	.-8      	; 0x35a <DIO_vSetPinValue+0x6a>
 362:	80 95       	com	r24
 364:	82 23       	and	r24, r18
 366:	88 bb       	out	0x18, r24	; 24
 368:	08 95       	ret
 36a:	44 23       	and	r20, r20
 36c:	59 f0       	breq	.+22     	; 0x384 <DIO_vSetPinValue+0x94>
 36e:	25 b3       	in	r18, 0x15	; 21
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_vSetPinValue+0x8a>
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	6a 95       	dec	r22
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_vSetPinValue+0x86>
 37e:	82 2b       	or	r24, r18
 380:	85 bb       	out	0x15, r24	; 21
 382:	08 95       	ret
 384:	25 b3       	in	r18, 0x15	; 21
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_vSetPinValue+0xa0>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	6a 95       	dec	r22
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_vSetPinValue+0x9c>
 394:	80 95       	com	r24
 396:	82 23       	and	r24, r18
 398:	85 bb       	out	0x15, r24	; 21
 39a:	08 95       	ret
 39c:	44 23       	and	r20, r20
 39e:	59 f0       	breq	.+22     	; 0x3b6 <DIO_vSetPinValue+0xc6>
 3a0:	22 b3       	in	r18, 0x12	; 18
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_vSetPinValue+0xbc>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	6a 95       	dec	r22
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_vSetPinValue+0xb8>
 3b0:	82 2b       	or	r24, r18
 3b2:	82 bb       	out	0x12, r24	; 18
 3b4:	08 95       	ret
 3b6:	22 b3       	in	r18, 0x12	; 18
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_vSetPinValue+0xd2>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_vSetPinValue+0xce>
 3c6:	80 95       	com	r24
 3c8:	82 23       	and	r24, r18
 3ca:	82 bb       	out	0x12, r24	; 18
 3cc:	08 95       	ret

000003ce <EEPROM_write>:
#include <avr/eeprom.h>
#include "MCAL_DIO.h"
#include "stdTypes.h"

void EEPROM_write(unsigned int address, u8 data) {
	eeprom_write_byte((u8*)address, data);
 3ce:	33 c2       	rjmp	.+1126   	; 0x836 <eeprom_write_byte>
 3d0:	08 95       	ret

000003d2 <uart_init>:
#include "MCAL_DIO.h"
#include "MCAL_UART.h"
#include <avr/io.h>

void uart_init(unsigned int baud){
	UCSRB = (1 << RXEN) | (1 << TXEN);//enable receiving and transmitting
 3d2:	88 e1       	ldi	r24, 0x18	; 24
 3d4:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << UCSZ1) | (1 << UCSZ0) | (1 << URSEL);//set size to 8 bits and enable writing to UCSRC
 3d6:	86 e8       	ldi	r24, 0x86	; 134
 3d8:	80 bd       	out	0x20, r24	; 32
	UBRRL = 0x33;
 3da:	83 e3       	ldi	r24, 0x33	; 51
 3dc:	89 b9       	out	0x09, r24	; 9
 3de:	08 95       	ret

000003e0 <uart_send>:
}

void uart_send(u8 data) {
	while (!(UCSRA & (1 << UDRE)));// Wait for the transmit buffer to be empty
 3e0:	5d 9b       	sbis	0x0b, 5	; 11
 3e2:	fe cf       	rjmp	.-4      	; 0x3e0 <uart_send>
	UDR = data;
 3e4:	8c b9       	out	0x0c, r24	; 12
 3e6:	08 95       	ret

000003e8 <shutDownMcu2>:
 3e8:	83 e7       	ldi	r24, 0x73	; 115
 3ea:	fa df       	rcall	.-12     	; 0x3e0 <uart_send>
 3ec:	84 e7       	ldi	r24, 0x74	; 116
 3ee:	f8 cf       	rjmp	.-16     	; 0x3e0 <uart_send>
 3f0:	08 95       	ret

000003f2 <set_state>:
 3f2:	bc 01       	movw	r22, r24
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	62 d1       	rcall	.+708    	; 0x6be <__floatunsisf>
 3fa:	2f e8       	ldi	r18, 0x8F	; 143
 3fc:	32 ec       	ldi	r19, 0xC2	; 194
 3fe:	45 e0       	ldi	r20, 0x05	; 5
 400:	50 e4       	ldi	r21, 0x40	; 64
 402:	c9 d0       	rcall	.+402    	; 0x596 <__divsf3>
 404:	30 d1       	rcall	.+608    	; 0x666 <__fixunssfsi>
 406:	26 2f       	mov	r18, r22
 408:	37 2f       	mov	r19, r23
 40a:	25 31       	cpi	r18, 0x15	; 21
 40c:	31 05       	cpc	r19, r1
 40e:	38 f4       	brcc	.+14     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	b4 de       	rcall	.-664    	; 0x17c <motor_setspeed>
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	d9 cf       	rjmp	.-78     	; 0x3ce <EEPROM_write>
 41c:	08 95       	ret
 41e:	29 32       	cpi	r18, 0x29	; 41
 420:	31 05       	cpc	r19, r1
 422:	30 f4       	brcc	.+12     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 424:	86 2f       	mov	r24, r22
 426:	88 0f       	add	r24, r24
 428:	86 0f       	add	r24, r22
 42a:	88 0f       	add	r24, r24
 42c:	a7 ce       	rjmp	.-690    	; 0x17c <motor_setspeed>
 42e:	08 95       	ret
 430:	23 33       	cpi	r18, 0x33	; 51
 432:	31 05       	cpc	r19, r1
 434:	18 f4       	brcc	.+6      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 436:	8f ef       	ldi	r24, 0xFF	; 255
 438:	a1 ce       	rjmp	.-702    	; 0x17c <motor_setspeed>
 43a:	08 95       	ret
 43c:	8f ef       	ldi	r24, 0xFF	; 255
 43e:	9e de       	rcall	.-708    	; 0x17c <motor_setspeed>
 440:	61 e0       	ldi	r22, 0x01	; 1
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	c3 df       	rcall	.-122    	; 0x3ce <EEPROM_write>
 448:	52 c0       	rjmp	.+164    	; 0x4ee <Timer1_Start>
 44a:	08 95       	ret

0000044c <main>:
 44c:	c2 df       	rcall	.-124    	; 0x3d2 <uart_init>
 44e:	9a de       	rcall	.-716    	; 0x184 <ADC_init>
 450:	7e de       	rcall	.-772    	; 0x14e <motor_init>
 452:	45 d0       	rcall	.+138    	; 0x4de <Timer1_Init>
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	94 de       	rcall	.-728    	; 0x180 <Get_Tempreature>
 458:	ec 01       	movw	r28, r24
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	b6 df       	rcall	.-148    	; 0x3ce <EEPROM_write>
 462:	40 e0       	ldi	r20, 0x00	; 0
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	82 e6       	ldi	r24, 0x62	; 98
 468:	d4 de       	rcall	.-600    	; 0x212 <DIO_vSetPinDirection>
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	82 e6       	ldi	r24, 0x62	; 98
 46e:	9a de       	rcall	.-716    	; 0x1a4 <DIO_vGetPinValue>
 470:	88 23       	and	r24, r24
 472:	e1 f0       	breq	.+56     	; 0x4ac <main+0x60>
 474:	be 01       	movw	r22, r28
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	21 d1       	rcall	.+578    	; 0x6be <__floatunsisf>
 47c:	2f e8       	ldi	r18, 0x8F	; 143
 47e:	32 ec       	ldi	r19, 0xC2	; 194
 480:	45 e0       	ldi	r20, 0x05	; 5
 482:	50 e4       	ldi	r21, 0x40	; 64
 484:	88 d0       	rcall	.+272    	; 0x596 <__divsf3>
 486:	6b 01       	movw	r12, r22
 488:	7c 01       	movw	r14, r24
 48a:	20 e0       	ldi	r18, 0x00	; 0
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	40 e2       	ldi	r20, 0x20	; 32
 490:	52 e4       	ldi	r21, 0x42	; 66
 492:	c7 d1       	rcall	.+910    	; 0x822 <__gesf2>
 494:	88 23       	and	r24, r24
 496:	54 f0       	brlt	.+20     	; 0x4ac <main+0x60>
 498:	20 e0       	ldi	r18, 0x00	; 0
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	48 e4       	ldi	r20, 0x48	; 72
 49e:	52 e4       	ldi	r21, 0x42	; 66
 4a0:	c7 01       	movw	r24, r14
 4a2:	b6 01       	movw	r22, r12
 4a4:	74 d0       	rcall	.+232    	; 0x58e <__cmpsf2>
 4a6:	18 16       	cp	r1, r24
 4a8:	0c f0       	brlt	.+2      	; 0x4ac <main+0x60>
 4aa:	9e df       	rcall	.-196    	; 0x3e8 <shutDownMcu2>
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	68 de       	rcall	.-816    	; 0x180 <Get_Tempreature>
 4b0:	ec 01       	movw	r28, r24
 4b2:	bc 01       	movw	r22, r24
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	02 d1       	rcall	.+516    	; 0x6be <__floatunsisf>
 4ba:	2f e8       	ldi	r18, 0x8F	; 143
 4bc:	32 ec       	ldi	r19, 0xC2	; 194
 4be:	45 e0       	ldi	r20, 0x05	; 5
 4c0:	50 e4       	ldi	r21, 0x40	; 64
 4c2:	69 d0       	rcall	.+210    	; 0x596 <__divsf3>
 4c4:	20 e0       	ldi	r18, 0x00	; 0
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	48 e4       	ldi	r20, 0x48	; 72
 4ca:	52 e4       	ldi	r21, 0x42	; 66
 4cc:	60 d0       	rcall	.+192    	; 0x58e <__cmpsf2>
 4ce:	88 23       	and	r24, r24
 4d0:	0c f4       	brge	.+2      	; 0x4d4 <main+0x88>
 4d2:	11 d0       	rcall	.+34     	; 0x4f6 <Timer1_Stop>
 4d4:	ce 01       	movw	r24, r28
 4d6:	8d df       	rcall	.-230    	; 0x3f2 <set_state>
 4d8:	8c 2f       	mov	r24, r28
 4da:	82 df       	rcall	.-252    	; 0x3e0 <uart_send>
 4dc:	c6 cf       	rjmp	.-116    	; 0x46a <main+0x1e>

000004de <Timer1_Init>:

volatile uint16_t overflow_count = 0;
volatile u8 timer_active = 0; // Flag to start/stop the timer

void Timer1_Init() {
	TCCR1A = 0; // Normal mode
 4de:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1 << CS11) | (1 << CS10); // Prescaler 64
 4e0:	83 e0       	ldi	r24, 0x03	; 3
 4e2:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << TOIE1); // Enable Timer1 Overflow Interrupt
 4e4:	89 b7       	in	r24, 0x39	; 57
 4e6:	84 60       	ori	r24, 0x04	; 4
 4e8:	89 bf       	out	0x39, r24	; 57
	sei(); // Enable global interrupts
 4ea:	78 94       	sei
 4ec:	08 95       	ret

000004ee <Timer1_Start>:
}

void Timer1_Start() {
	// Set the timer_active flag to true
	timer_active = 1;
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 4f4:	08 95       	ret

000004f6 <Timer1_Stop>:
}

void Timer1_Stop() {
	// Set the timer_active flag to false
	timer_active = 0;
 4f6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	// Reset overflow count
	overflow_count = 0;
 4fa:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <overflow_count+0x1>
 4fe:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <overflow_count>
 502:	08 95       	ret

00000504 <__vector_9>:
}

ISR(TIMER1_OVF_vect) {
 504:	1f 92       	push	r1
 506:	0f 92       	push	r0
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	0f 92       	push	r0
 50c:	11 24       	eor	r1, r1
 50e:	2f 93       	push	r18
 510:	3f 93       	push	r19
 512:	4f 93       	push	r20
 514:	5f 93       	push	r21
 516:	6f 93       	push	r22
 518:	7f 93       	push	r23
 51a:	8f 93       	push	r24
 51c:	9f 93       	push	r25
 51e:	af 93       	push	r26
 520:	bf 93       	push	r27
 522:	ef 93       	push	r30
 524:	ff 93       	push	r31
	
	if (timer_active) {
 526:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 52a:	88 23       	and	r24, r24
 52c:	f9 f0       	breq	.+62     	; 0x56c <__vector_9+0x68>
		overflow_count++;
 52e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <overflow_count>
 532:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <overflow_count+0x1>
 536:	01 96       	adiw	r24, 0x01	; 1
 538:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <overflow_count+0x1>
 53c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <overflow_count>
		if (overflow_count >= OVERFLOW_COUNT) {
 540:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <overflow_count>
 544:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <overflow_count+0x1>
 548:	07 97       	sbiw	r24, 0x07	; 7
 54a:	80 f0       	brcs	.+32     	; 0x56c <__vector_9+0x68>
			
			// 7 seconds have passed
			// Write abnormal state to EEPROM
			EEPROM_write(0, 2);
 54c:	62 e0       	ldi	r22, 0x02	; 2
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	3d df       	rcall	.-390    	; 0x3ce <EEPROM_write>
			// Turn on LED as an indication
			DIO_vSetPinDirection('C', 2, 1);
 554:	41 e0       	ldi	r20, 0x01	; 1
 556:	62 e0       	ldi	r22, 0x02	; 2
 558:	83 e4       	ldi	r24, 0x43	; 67
 55a:	5b de       	rcall	.-842    	; 0x212 <DIO_vSetPinDirection>
			DIO_vSetPinValue('C', 2, 1);
 55c:	41 e0       	ldi	r20, 0x01	; 1
 55e:	62 e0       	ldi	r22, 0x02	; 2
 560:	83 e4       	ldi	r24, 0x43	; 67
			Timer1_Stop();
 562:	c6 de       	rcall	.-628    	; 0x2f0 <DIO_vSetPinValue>
 564:	c8 df       	rcall	.-112    	; 0x4f6 <Timer1_Stop>
			// Activate Watchdog Timer
			WDTCR = (1 << WDE) | (1 << WDP0); // Watchdog timeout of 16ms
 566:	89 e0       	ldi	r24, 0x09	; 9
 568:	81 bd       	out	0x21, r24	; 33
 56a:	ff cf       	rjmp	.-2      	; 0x56a <__vector_9+0x66>
			while (1); // Infinite loop to trigger watchdog reset

		}
	}
}
 56c:	ff 91       	pop	r31
 56e:	ef 91       	pop	r30
 570:	bf 91       	pop	r27
 572:	af 91       	pop	r26
 574:	9f 91       	pop	r25
 576:	8f 91       	pop	r24
 578:	7f 91       	pop	r23
 57a:	6f 91       	pop	r22
 57c:	5f 91       	pop	r21
 57e:	4f 91       	pop	r20
 580:	3f 91       	pop	r19
 582:	2f 91       	pop	r18
 584:	0f 90       	pop	r0
 586:	0f be       	out	0x3f, r0	; 63
 588:	0f 90       	pop	r0
 58a:	1f 90       	pop	r1
 58c:	18 95       	reti

0000058e <__cmpsf2>:
 58e:	d4 d0       	rcall	.+424    	; 0x738 <__fp_cmp>
 590:	08 f4       	brcc	.+2      	; 0x594 <__cmpsf2+0x6>
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	08 95       	ret

00000596 <__divsf3>:
 596:	0c d0       	rcall	.+24     	; 0x5b0 <__divsf3x>
 598:	0a c1       	rjmp	.+532    	; 0x7ae <__fp_round>
 59a:	02 d1       	rcall	.+516    	; 0x7a0 <__fp_pscB>
 59c:	40 f0       	brcs	.+16     	; 0x5ae <__divsf3+0x18>
 59e:	f9 d0       	rcall	.+498    	; 0x792 <__fp_pscA>
 5a0:	30 f0       	brcs	.+12     	; 0x5ae <__divsf3+0x18>
 5a2:	21 f4       	brne	.+8      	; 0x5ac <__divsf3+0x16>
 5a4:	5f 3f       	cpi	r21, 0xFF	; 255
 5a6:	19 f0       	breq	.+6      	; 0x5ae <__divsf3+0x18>
 5a8:	eb c0       	rjmp	.+470    	; 0x780 <__fp_inf>
 5aa:	51 11       	cpse	r21, r1
 5ac:	34 c1       	rjmp	.+616    	; 0x816 <__fp_szero>
 5ae:	ee c0       	rjmp	.+476    	; 0x78c <__fp_nan>

000005b0 <__divsf3x>:
 5b0:	0f d1       	rcall	.+542    	; 0x7d0 <__fp_split3>
 5b2:	98 f3       	brcs	.-26     	; 0x59a <__divsf3+0x4>

000005b4 <__divsf3_pse>:
 5b4:	99 23       	and	r25, r25
 5b6:	c9 f3       	breq	.-14     	; 0x5aa <__divsf3+0x14>
 5b8:	55 23       	and	r21, r21
 5ba:	b1 f3       	breq	.-20     	; 0x5a8 <__divsf3+0x12>
 5bc:	95 1b       	sub	r25, r21
 5be:	55 0b       	sbc	r21, r21
 5c0:	bb 27       	eor	r27, r27
 5c2:	aa 27       	eor	r26, r26
 5c4:	62 17       	cp	r22, r18
 5c6:	73 07       	cpc	r23, r19
 5c8:	84 07       	cpc	r24, r20
 5ca:	38 f0       	brcs	.+14     	; 0x5da <__divsf3_pse+0x26>
 5cc:	9f 5f       	subi	r25, 0xFF	; 255
 5ce:	5f 4f       	sbci	r21, 0xFF	; 255
 5d0:	22 0f       	add	r18, r18
 5d2:	33 1f       	adc	r19, r19
 5d4:	44 1f       	adc	r20, r20
 5d6:	aa 1f       	adc	r26, r26
 5d8:	a9 f3       	breq	.-22     	; 0x5c4 <__divsf3_pse+0x10>
 5da:	33 d0       	rcall	.+102    	; 0x642 <__divsf3_pse+0x8e>
 5dc:	0e 2e       	mov	r0, r30
 5de:	3a f0       	brmi	.+14     	; 0x5ee <__divsf3_pse+0x3a>
 5e0:	e0 e8       	ldi	r30, 0x80	; 128
 5e2:	30 d0       	rcall	.+96     	; 0x644 <__divsf3_pse+0x90>
 5e4:	91 50       	subi	r25, 0x01	; 1
 5e6:	50 40       	sbci	r21, 0x00	; 0
 5e8:	e6 95       	lsr	r30
 5ea:	00 1c       	adc	r0, r0
 5ec:	ca f7       	brpl	.-14     	; 0x5e0 <__divsf3_pse+0x2c>
 5ee:	29 d0       	rcall	.+82     	; 0x642 <__divsf3_pse+0x8e>
 5f0:	fe 2f       	mov	r31, r30
 5f2:	27 d0       	rcall	.+78     	; 0x642 <__divsf3_pse+0x8e>
 5f4:	66 0f       	add	r22, r22
 5f6:	77 1f       	adc	r23, r23
 5f8:	88 1f       	adc	r24, r24
 5fa:	bb 1f       	adc	r27, r27
 5fc:	26 17       	cp	r18, r22
 5fe:	37 07       	cpc	r19, r23
 600:	48 07       	cpc	r20, r24
 602:	ab 07       	cpc	r26, r27
 604:	b0 e8       	ldi	r27, 0x80	; 128
 606:	09 f0       	breq	.+2      	; 0x60a <__divsf3_pse+0x56>
 608:	bb 0b       	sbc	r27, r27
 60a:	80 2d       	mov	r24, r0
 60c:	bf 01       	movw	r22, r30
 60e:	ff 27       	eor	r31, r31
 610:	93 58       	subi	r25, 0x83	; 131
 612:	5f 4f       	sbci	r21, 0xFF	; 255
 614:	2a f0       	brmi	.+10     	; 0x620 <__divsf3_pse+0x6c>
 616:	9e 3f       	cpi	r25, 0xFE	; 254
 618:	51 05       	cpc	r21, r1
 61a:	68 f0       	brcs	.+26     	; 0x636 <__divsf3_pse+0x82>
 61c:	b1 c0       	rjmp	.+354    	; 0x780 <__fp_inf>
 61e:	fb c0       	rjmp	.+502    	; 0x816 <__fp_szero>
 620:	5f 3f       	cpi	r21, 0xFF	; 255
 622:	ec f3       	brlt	.-6      	; 0x61e <__divsf3_pse+0x6a>
 624:	98 3e       	cpi	r25, 0xE8	; 232
 626:	dc f3       	brlt	.-10     	; 0x61e <__divsf3_pse+0x6a>
 628:	86 95       	lsr	r24
 62a:	77 95       	ror	r23
 62c:	67 95       	ror	r22
 62e:	b7 95       	ror	r27
 630:	f7 95       	ror	r31
 632:	9f 5f       	subi	r25, 0xFF	; 255
 634:	c9 f7       	brne	.-14     	; 0x628 <__divsf3_pse+0x74>
 636:	88 0f       	add	r24, r24
 638:	91 1d       	adc	r25, r1
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24
 63e:	97 f9       	bld	r25, 7
 640:	08 95       	ret
 642:	e1 e0       	ldi	r30, 0x01	; 1
 644:	66 0f       	add	r22, r22
 646:	77 1f       	adc	r23, r23
 648:	88 1f       	adc	r24, r24
 64a:	bb 1f       	adc	r27, r27
 64c:	62 17       	cp	r22, r18
 64e:	73 07       	cpc	r23, r19
 650:	84 07       	cpc	r24, r20
 652:	ba 07       	cpc	r27, r26
 654:	20 f0       	brcs	.+8      	; 0x65e <__divsf3_pse+0xaa>
 656:	62 1b       	sub	r22, r18
 658:	73 0b       	sbc	r23, r19
 65a:	84 0b       	sbc	r24, r20
 65c:	ba 0b       	sbc	r27, r26
 65e:	ee 1f       	adc	r30, r30
 660:	88 f7       	brcc	.-30     	; 0x644 <__divsf3_pse+0x90>
 662:	e0 95       	com	r30
 664:	08 95       	ret

00000666 <__fixunssfsi>:
 666:	bc d0       	rcall	.+376    	; 0x7e0 <__fp_splitA>
 668:	88 f0       	brcs	.+34     	; 0x68c <__fixunssfsi+0x26>
 66a:	9f 57       	subi	r25, 0x7F	; 127
 66c:	90 f0       	brcs	.+36     	; 0x692 <__fixunssfsi+0x2c>
 66e:	b9 2f       	mov	r27, r25
 670:	99 27       	eor	r25, r25
 672:	b7 51       	subi	r27, 0x17	; 23
 674:	a0 f0       	brcs	.+40     	; 0x69e <__fixunssfsi+0x38>
 676:	d1 f0       	breq	.+52     	; 0x6ac <__fixunssfsi+0x46>
 678:	66 0f       	add	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	99 1f       	adc	r25, r25
 680:	1a f0       	brmi	.+6      	; 0x688 <__fixunssfsi+0x22>
 682:	ba 95       	dec	r27
 684:	c9 f7       	brne	.-14     	; 0x678 <__fixunssfsi+0x12>
 686:	12 c0       	rjmp	.+36     	; 0x6ac <__fixunssfsi+0x46>
 688:	b1 30       	cpi	r27, 0x01	; 1
 68a:	81 f0       	breq	.+32     	; 0x6ac <__fixunssfsi+0x46>
 68c:	c3 d0       	rcall	.+390    	; 0x814 <__fp_zero>
 68e:	b1 e0       	ldi	r27, 0x01	; 1
 690:	08 95       	ret
 692:	c0 c0       	rjmp	.+384    	; 0x814 <__fp_zero>
 694:	67 2f       	mov	r22, r23
 696:	78 2f       	mov	r23, r24
 698:	88 27       	eor	r24, r24
 69a:	b8 5f       	subi	r27, 0xF8	; 248
 69c:	39 f0       	breq	.+14     	; 0x6ac <__fixunssfsi+0x46>
 69e:	b9 3f       	cpi	r27, 0xF9	; 249
 6a0:	cc f3       	brlt	.-14     	; 0x694 <__fixunssfsi+0x2e>
 6a2:	86 95       	lsr	r24
 6a4:	77 95       	ror	r23
 6a6:	67 95       	ror	r22
 6a8:	b3 95       	inc	r27
 6aa:	d9 f7       	brne	.-10     	; 0x6a2 <__fixunssfsi+0x3c>
 6ac:	3e f4       	brtc	.+14     	; 0x6bc <__fixunssfsi+0x56>
 6ae:	90 95       	com	r25
 6b0:	80 95       	com	r24
 6b2:	70 95       	com	r23
 6b4:	61 95       	neg	r22
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255
 6bc:	08 95       	ret

000006be <__floatunsisf>:
 6be:	e8 94       	clt
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <__floatsisf+0x12>

000006c2 <__floatsisf>:
 6c2:	97 fb       	bst	r25, 7
 6c4:	3e f4       	brtc	.+14     	; 0x6d4 <__floatsisf+0x12>
 6c6:	90 95       	com	r25
 6c8:	80 95       	com	r24
 6ca:	70 95       	com	r23
 6cc:	61 95       	neg	r22
 6ce:	7f 4f       	sbci	r23, 0xFF	; 255
 6d0:	8f 4f       	sbci	r24, 0xFF	; 255
 6d2:	9f 4f       	sbci	r25, 0xFF	; 255
 6d4:	99 23       	and	r25, r25
 6d6:	a9 f0       	breq	.+42     	; 0x702 <__floatsisf+0x40>
 6d8:	f9 2f       	mov	r31, r25
 6da:	96 e9       	ldi	r25, 0x96	; 150
 6dc:	bb 27       	eor	r27, r27
 6de:	93 95       	inc	r25
 6e0:	f6 95       	lsr	r31
 6e2:	87 95       	ror	r24
 6e4:	77 95       	ror	r23
 6e6:	67 95       	ror	r22
 6e8:	b7 95       	ror	r27
 6ea:	f1 11       	cpse	r31, r1
 6ec:	f8 cf       	rjmp	.-16     	; 0x6de <__floatsisf+0x1c>
 6ee:	fa f4       	brpl	.+62     	; 0x72e <__floatsisf+0x6c>
 6f0:	bb 0f       	add	r27, r27
 6f2:	11 f4       	brne	.+4      	; 0x6f8 <__floatsisf+0x36>
 6f4:	60 ff       	sbrs	r22, 0
 6f6:	1b c0       	rjmp	.+54     	; 0x72e <__floatsisf+0x6c>
 6f8:	6f 5f       	subi	r22, 0xFF	; 255
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8f 4f       	sbci	r24, 0xFF	; 255
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	16 c0       	rjmp	.+44     	; 0x72e <__floatsisf+0x6c>
 702:	88 23       	and	r24, r24
 704:	11 f0       	breq	.+4      	; 0x70a <__floatsisf+0x48>
 706:	96 e9       	ldi	r25, 0x96	; 150
 708:	11 c0       	rjmp	.+34     	; 0x72c <__floatsisf+0x6a>
 70a:	77 23       	and	r23, r23
 70c:	21 f0       	breq	.+8      	; 0x716 <__floatsisf+0x54>
 70e:	9e e8       	ldi	r25, 0x8E	; 142
 710:	87 2f       	mov	r24, r23
 712:	76 2f       	mov	r23, r22
 714:	05 c0       	rjmp	.+10     	; 0x720 <__floatsisf+0x5e>
 716:	66 23       	and	r22, r22
 718:	71 f0       	breq	.+28     	; 0x736 <__floatsisf+0x74>
 71a:	96 e8       	ldi	r25, 0x86	; 134
 71c:	86 2f       	mov	r24, r22
 71e:	70 e0       	ldi	r23, 0x00	; 0
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	2a f0       	brmi	.+10     	; 0x72e <__floatsisf+0x6c>
 724:	9a 95       	dec	r25
 726:	66 0f       	add	r22, r22
 728:	77 1f       	adc	r23, r23
 72a:	88 1f       	adc	r24, r24
 72c:	da f7       	brpl	.-10     	; 0x724 <__floatsisf+0x62>
 72e:	88 0f       	add	r24, r24
 730:	96 95       	lsr	r25
 732:	87 95       	ror	r24
 734:	97 f9       	bld	r25, 7
 736:	08 95       	ret

00000738 <__fp_cmp>:
 738:	99 0f       	add	r25, r25
 73a:	00 08       	sbc	r0, r0
 73c:	55 0f       	add	r21, r21
 73e:	aa 0b       	sbc	r26, r26
 740:	e0 e8       	ldi	r30, 0x80	; 128
 742:	fe ef       	ldi	r31, 0xFE	; 254
 744:	16 16       	cp	r1, r22
 746:	17 06       	cpc	r1, r23
 748:	e8 07       	cpc	r30, r24
 74a:	f9 07       	cpc	r31, r25
 74c:	c0 f0       	brcs	.+48     	; 0x77e <__fp_cmp+0x46>
 74e:	12 16       	cp	r1, r18
 750:	13 06       	cpc	r1, r19
 752:	e4 07       	cpc	r30, r20
 754:	f5 07       	cpc	r31, r21
 756:	98 f0       	brcs	.+38     	; 0x77e <__fp_cmp+0x46>
 758:	62 1b       	sub	r22, r18
 75a:	73 0b       	sbc	r23, r19
 75c:	84 0b       	sbc	r24, r20
 75e:	95 0b       	sbc	r25, r21
 760:	39 f4       	brne	.+14     	; 0x770 <__fp_cmp+0x38>
 762:	0a 26       	eor	r0, r26
 764:	61 f0       	breq	.+24     	; 0x77e <__fp_cmp+0x46>
 766:	23 2b       	or	r18, r19
 768:	24 2b       	or	r18, r20
 76a:	25 2b       	or	r18, r21
 76c:	21 f4       	brne	.+8      	; 0x776 <__fp_cmp+0x3e>
 76e:	08 95       	ret
 770:	0a 26       	eor	r0, r26
 772:	09 f4       	brne	.+2      	; 0x776 <__fp_cmp+0x3e>
 774:	a1 40       	sbci	r26, 0x01	; 1
 776:	a6 95       	lsr	r26
 778:	8f ef       	ldi	r24, 0xFF	; 255
 77a:	81 1d       	adc	r24, r1
 77c:	81 1d       	adc	r24, r1
 77e:	08 95       	ret

00000780 <__fp_inf>:
 780:	97 f9       	bld	r25, 7
 782:	9f 67       	ori	r25, 0x7F	; 127
 784:	80 e8       	ldi	r24, 0x80	; 128
 786:	70 e0       	ldi	r23, 0x00	; 0
 788:	60 e0       	ldi	r22, 0x00	; 0
 78a:	08 95       	ret

0000078c <__fp_nan>:
 78c:	9f ef       	ldi	r25, 0xFF	; 255
 78e:	80 ec       	ldi	r24, 0xC0	; 192
 790:	08 95       	ret

00000792 <__fp_pscA>:
 792:	00 24       	eor	r0, r0
 794:	0a 94       	dec	r0
 796:	16 16       	cp	r1, r22
 798:	17 06       	cpc	r1, r23
 79a:	18 06       	cpc	r1, r24
 79c:	09 06       	cpc	r0, r25
 79e:	08 95       	ret

000007a0 <__fp_pscB>:
 7a0:	00 24       	eor	r0, r0
 7a2:	0a 94       	dec	r0
 7a4:	12 16       	cp	r1, r18
 7a6:	13 06       	cpc	r1, r19
 7a8:	14 06       	cpc	r1, r20
 7aa:	05 06       	cpc	r0, r21
 7ac:	08 95       	ret

000007ae <__fp_round>:
 7ae:	09 2e       	mov	r0, r25
 7b0:	03 94       	inc	r0
 7b2:	00 0c       	add	r0, r0
 7b4:	11 f4       	brne	.+4      	; 0x7ba <__fp_round+0xc>
 7b6:	88 23       	and	r24, r24
 7b8:	52 f0       	brmi	.+20     	; 0x7ce <__fp_round+0x20>
 7ba:	bb 0f       	add	r27, r27
 7bc:	40 f4       	brcc	.+16     	; 0x7ce <__fp_round+0x20>
 7be:	bf 2b       	or	r27, r31
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <__fp_round+0x18>
 7c2:	60 ff       	sbrs	r22, 0
 7c4:	04 c0       	rjmp	.+8      	; 0x7ce <__fp_round+0x20>
 7c6:	6f 5f       	subi	r22, 0xFF	; 255
 7c8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ca:	8f 4f       	sbci	r24, 0xFF	; 255
 7cc:	9f 4f       	sbci	r25, 0xFF	; 255
 7ce:	08 95       	ret

000007d0 <__fp_split3>:
 7d0:	57 fd       	sbrc	r21, 7
 7d2:	90 58       	subi	r25, 0x80	; 128
 7d4:	44 0f       	add	r20, r20
 7d6:	55 1f       	adc	r21, r21
 7d8:	59 f0       	breq	.+22     	; 0x7f0 <__fp_splitA+0x10>
 7da:	5f 3f       	cpi	r21, 0xFF	; 255
 7dc:	71 f0       	breq	.+28     	; 0x7fa <__fp_splitA+0x1a>
 7de:	47 95       	ror	r20

000007e0 <__fp_splitA>:
 7e0:	88 0f       	add	r24, r24
 7e2:	97 fb       	bst	r25, 7
 7e4:	99 1f       	adc	r25, r25
 7e6:	61 f0       	breq	.+24     	; 0x800 <__DATA_REGION_LENGTH__>
 7e8:	9f 3f       	cpi	r25, 0xFF	; 255
 7ea:	79 f0       	breq	.+30     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7ec:	87 95       	ror	r24
 7ee:	08 95       	ret
 7f0:	12 16       	cp	r1, r18
 7f2:	13 06       	cpc	r1, r19
 7f4:	14 06       	cpc	r1, r20
 7f6:	55 1f       	adc	r21, r21
 7f8:	f2 cf       	rjmp	.-28     	; 0x7de <__fp_split3+0xe>
 7fa:	46 95       	lsr	r20
 7fc:	f1 df       	rcall	.-30     	; 0x7e0 <__fp_splitA>
 7fe:	08 c0       	rjmp	.+16     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 800:	16 16       	cp	r1, r22
 802:	17 06       	cpc	r1, r23
 804:	18 06       	cpc	r1, r24
 806:	99 1f       	adc	r25, r25
 808:	f1 cf       	rjmp	.-30     	; 0x7ec <__fp_splitA+0xc>
 80a:	86 95       	lsr	r24
 80c:	71 05       	cpc	r23, r1
 80e:	61 05       	cpc	r22, r1
 810:	08 94       	sec
 812:	08 95       	ret

00000814 <__fp_zero>:
 814:	e8 94       	clt

00000816 <__fp_szero>:
 816:	bb 27       	eor	r27, r27
 818:	66 27       	eor	r22, r22
 81a:	77 27       	eor	r23, r23
 81c:	cb 01       	movw	r24, r22
 81e:	97 f9       	bld	r25, 7
 820:	08 95       	ret

00000822 <__gesf2>:
 822:	8a df       	rcall	.-236    	; 0x738 <__fp_cmp>
 824:	08 f4       	brcc	.+2      	; 0x828 <__gesf2+0x6>
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	08 95       	ret

0000082a <__tablejump2__>:
 82a:	ee 0f       	add	r30, r30
 82c:	ff 1f       	adc	r31, r31
 82e:	05 90       	lpm	r0, Z+
 830:	f4 91       	lpm	r31, Z
 832:	e0 2d       	mov	r30, r0
 834:	09 94       	ijmp

00000836 <eeprom_write_byte>:
 836:	26 2f       	mov	r18, r22

00000838 <eeprom_write_r18>:
 838:	e1 99       	sbic	0x1c, 1	; 28
 83a:	fe cf       	rjmp	.-4      	; 0x838 <eeprom_write_r18>
 83c:	9f bb       	out	0x1f, r25	; 31
 83e:	8e bb       	out	0x1e, r24	; 30
 840:	2d bb       	out	0x1d, r18	; 29
 842:	0f b6       	in	r0, 0x3f	; 63
 844:	f8 94       	cli
 846:	e2 9a       	sbi	0x1c, 2	; 28
 848:	e1 9a       	sbi	0x1c, 1	; 28
 84a:	0f be       	out	0x3f, r0	; 63
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	08 95       	ret

00000850 <_exit>:
 850:	f8 94       	cli

00000852 <__stop_program>:
 852:	ff cf       	rjmp	.-2      	; 0x852 <__stop_program>
